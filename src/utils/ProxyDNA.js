import crypto from 'crypto';

/**
 * üß¨ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π "–æ—Ç–ø–µ—á–∞—Ç–æ–∫" –ø—Ä–æ–∫—Å–∏ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞
 * –í–∫–ª—é—á–∞–µ—Ç –≥–µ–æ, —Å–∫–æ—Ä–æ—Å—Ç—å, –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å, –∏—Å—Ç–æ—á–Ω–∏–∫
 */
export class ProxyDNA {
  static encode(proxy) {
    const payload = [
      proxy.ip,
      proxy.port,
      proxy.protocol,
      proxy.country || 'XX',
      proxy.anonymity || 'unknown',
      proxy.source,
      Math.floor((proxy.speed || 0) / 100), // –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
      proxy.type || 'proxy'
    ].join('|');
    return crypto.createHash('sha256').update(payload).digest('hex').substring(0, 16);
  }

  static isSimilar(dna1, dna2, threshold = 0.9) {
    // –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å fuzzy matching
    return dna1 === dna2;
  }
}